name: Build & Deploy Angular App 

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs a single command using the runners shell
      - name: Build Process Started
        run: echo Build Process Started
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.x'
          cache: "npm"
          
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
        id: pages_conf
        with:
         # Try to enable Pages for the repository if it is not already enabled. This option requires a token other than `GITHUB_TOKEN` to be provided. In the context of a Personal Access Token, the `repo` scope or Pages write permission is required. In the context of a GitHub App, the `administration:write` and `pages:write` permissions are required.
         enablement: true # optional, default is false
         # GitHub token
         token: ${{secrets.GH_PAT}} # default is ${{ github.token }}
   
      - name: Install Angular
        run: npm install -g @angular/cli@latest 
          
      - name: Install Dependencies 
        run: npm install
      
      - name: Build Angular App 
        run: |
         node -v
         npm -v
         ng version
         npm install 
         ng build --output-path=${{ steps.pages_conf.outputs.base_path }}

      - name: Archive artifact
        shell: sh
        run: |
          chmod -c -R +rX "$INPUT_PATH" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
          tar \
            --dereference --hard-dereference \
            --directory "$INPUT_PATH" \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .
        env:
          INPUT_PATH: dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ runner.temp }}/artifact.tar
            
      # Runs a set of commands using the runners shell
      - name: Build Successfull
        run: |
          echo Build Was Successfull,
  
  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GH_PAT }}
          artifact_name: artifact
